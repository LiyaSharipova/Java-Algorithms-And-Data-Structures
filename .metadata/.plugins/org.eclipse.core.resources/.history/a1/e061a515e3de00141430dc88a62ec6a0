package ru.kpfu.itis.group403.yuskevich.fileManager.commands;

import java.io.File;
import java.nio.file.NoSuchFileException;

import ru.kpfu.itis.group403.yuskevich.fileManager.classes.Helper;
import ru.kpfu.itis.group403.yuskevich.fileManager.interfaces.Command;
import ru.kpfu.itis.group403.yuskevich.fileManager.interfaces.DirChanger;

public class Remove implements Command {
	private String[] commandWords;
	@Override
	public void setCommandString(String command) {
		String[] words=command.split(" ");
		commandWords=new String[words.length-1];
		System.arraycopy(words, 1, commandWords, 0, words.length-1);
	} 
	private DirChanger dirChanger;
	public Remove(DirChanger dirChanger) {
		super();
		this.dirChanger = dirChanger;
	}

	@Override
	public String keyWord() {
		return "/remove";
	}

	@Override
	public boolean check(String commandString)
			throws NoSuchFileException, IllegalArgumentException {
        return  Helper.checkLength(1, commandWords);
	 
	}
	private void deleteDirectory(File dir) {
		if (dir.isDirectory()) {
			String[] list = dir.list();
			for (int i=0; i<list.length; i++) {
				File f = new File(dir, list[i]);
				deleteDirectory(f);
			}
			dir.delete();
		} else dir.delete();
	}

	@Override
	public void execute() throws NoSuchFileException {
		File file = Helper.correctPath(commandWords[0], dirChanger.getDir());
		if (!file.exists()){
        	throw new NoSuchFileException(" no such file: "+ commandWords[0]);
        }
		deleteDirectory(file);
	}

}
