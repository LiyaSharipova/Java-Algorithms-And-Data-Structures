package ru.kpfu.itis.group403.yuskevich.fileManager.commands;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.NoSuchFileException;
import java.util.Scanner;

import ru.kpfu.itis.group403.yuskevich.fileManager.classes.Tool;
import ru.kpfu.itis.group403.yuskevich.fileManager.classes.WrongInputException;
import ru.kpfu.itis.group403.yuskevich.fileManager.interfaces.Command;
import ru.kpfu.itis.group403.yuskevich.fileManager.interfaces.DirChanger;

public class Copy implements Command {
	private Scanner sc;
	private DirChanger dirChanger;
    private File file, copyDir;
	public Copy( DirChanger dir, Scanner sc) {
		super();
		this.sc = sc;
		this.dirChanger = dir;
	}

	@Override
	public void init(String command) {
		String[] words = Tool.split(command);
		file=Tool.correctPath(words[1], dirChanger.getDir());
		copyDir=Tool.correctPath(words[2], dirChanger.getDir());
	}

	@Override
	public String keyWord() {
		return "/copy";
	}

	@Override
	public boolean check(String command) throws IllegalArgumentException {
		String[] words = Tool.split(command);
		return  Tool.checkLength(3, words);
	}
    private String rightName(String path){
    	StringBuffer copyFileName= new StringBuffer(path);
    	int i=2;
    	copyFileName=copyFileName.insert(path.lastIndexOf('.'),"_copy");
		if(new File(copyFileName.toString()).exists()){
			copyFileName=copyFileName.insert(copyFileName.toString().lastIndexOf('.'),"(1)");
		}
		if(new File(copyFileName.toString()).exists()){
			while(new File(copyFileName.toString()).exists()){
				copyFileName=copyFileName.replace(copyFileName.toString().lastIndexOf('(')+1,
						copyFileName.toString().lastIndexOf(')') , Integer.toString(i));
				i++;
			}
		}
		return copyFileName.toString();
    }
	@Override
	public boolean  execute() throws IOException {
		File copyFile;
		String path=file.getPath();
		String fileName=path.substring(path.lastIndexOf(File.separatorChar)+1);
		File fileDir=new File(path.substring(0, path.lastIndexOf(File.separatorChar)+1));
		
		if (fileDir.equals(copyDir)){
			copyFile=new File(rightName(path));
		}
		else{
			
		}
		

	return true;
}

}
