package ru.kpfu.itis.group403.yuskevich.fileManager.commands;

import java.io.File;
import java.io.IOException;
import java.nio.file.NoSuchFileException;
import java.util.Scanner;

import ru.kpfu.itis.group403.yuskevich.fileManager.classes.Helper;
import ru.kpfu.itis.group403.yuskevich.fileManager.interfaces.Command;
import ru.kpfu.itis.group403.yuskevich.fileManager.interfaces.DirChanger;

public class Copy implements Command {
	private Scanner sc;
	private DirChanger dirChanger;

	public Copy( DirChanger dir, Scanner sc) {
		super();
		this.sc = sc;
		this.dirChanger = dir;
	}

	private String[] commandWords;
	@Override
	public void init(String command) {
		String[] words=command.split(" ");
		commandWords=new String[words.length-1];
		System.arraycopy(words, 1, commandWords, 0, words.length-1);
	}

	@Override
	public String keyWord() {
		return "/copy";
	}

	@Override
	 public boolean check(String command) throws NoSuchFileException, IllegalArgumentException {
    	String[] words=command.split(" ");
        return  Helper.checkLength(3, words);
    }

	@Override
	public void execute() throws IOException {
		File file = Helper.correctPath(commandWords[0], dirChanger.getDir());
		String path=file.getPath();
		File fileDir=new File(file.getPath().substring(0, path.lastIndexOf(File.separatorChar)));
		File copyDir=Helper.correctPath(commandWords[1], dirChanger.getDir());
        if (fileDir.equals(copyDir)){
        	System.out.println("tr");
        }
        else 
        	System.out.println("false");
	}

}
